{"scope":"source.lua","completions":[
{"contents":"PlayerData.bagData:updateData(data)","trigger":"PlayerData.bagData:updateData(data)     [...]"},
{"contents":"PlayerData.bagData:sendSingleBagNotification(bagType)","trigger":"PlayerData.bagData:sendSingleBagNotification(bagType)     [...]"},
{"contents":"PlayerData.bagData:getBagByType(bagType)","trigger":"PlayerData.bagData:getBagByType(bagType)     [...]"},
{"contents":"PlayerData.bagData:getNumByTid(tid)","trigger":"PlayerData.bagData:getNumByTid(tid)     [...]"},
{"contents":"PlayerData.dailyCopyData:updateData(msg)","trigger":"PlayerData.dailyCopyData:updateData(msg)     [...]"},
{"contents":"PlayerData.dailyCopyData:canSkip(stageId)","trigger":"PlayerData.dailyCopyData:canSkip(stageId)     [...]"},
{"contents":"PlayerData.dailyCopyData:getPassNum(dailyId)","trigger":"PlayerData.dailyCopyData:getPassNum(dailyId)     [...]"},
{"contents":"PlayerData.dailyCopyData:setFightData(dailyId, stageId)","trigger":"PlayerData.dailyCopyData:setFightData(dailyId, stageId)     [...]"},
{"contents":"PlayerData.dailyCopyData:getFightData()","trigger":"PlayerData.dailyCopyData:getFightData()     [...]"},
{"contents":"PlayerData.equipBagData:getEquipDataList()","trigger":"PlayerData.equipBagData:getEquipDataList()     [...]"},
{"contents":"PlayerData.equipBagData:sortEquipDataList()","trigger":"PlayerData.equipBagData:sortEquipDataList()     [...]"},
{"contents":"PlayerData.equipBagData:updateEquipBagData(equipListData)","trigger":"PlayerData.equipBagData:updateEquipBagData(equipListData)     [...]"},
{"contents":"PlayerData.equipBagData:updateEquip(equipInfo)","trigger":"PlayerData.equipBagData:updateEquip(equipInfo)     [...]"},
{"contents":"PlayerData.equipBagData:removeEquip(equipId,equipList,equipMap)","trigger":"PlayerData.equipBagData:removeEquip(equipId,equipList,equipMap)     [...]"},
{"contents":"PlayerData.friendData:update(TFriendMainInfoRet)","trigger":"PlayerData.friendData:update(TFriendMainInfoRet)     [...]"},
{"contents":"PlayerData.friendData:updateRecommendList(list)","trigger":"PlayerData.friendData:updateRecommendList(list)     [...]"},
{"contents":"PlayerData.friendData:getFriendConf()","trigger":"PlayerData.friendData:getFriendConf()     [...]"},
{"contents":"PlayerData.friendData:getMaxFriends()","trigger":"PlayerData.friendData:getMaxFriends()     [...]"},
{"contents":"PlayerData.friendData:isFull()","trigger":"PlayerData.friendData:isFull()     [...]"},
{"contents":"PlayerData.friendData:isRecommendCD()","trigger":"PlayerData.friendData:isRecommendCD()     [...]"},
{"contents":"PlayerData.friendData:isSend(uid)","trigger":"PlayerData.friendData:isSend(uid)     [...]"},
{"contents":"PlayerData.friendData:receiveEnergyLeft()","trigger":"PlayerData.friendData:receiveEnergyLeft()     [...]"},
{"contents":"PlayerData.friendData:getFriendRelation(uid)","trigger":"PlayerData.friendData:getFriendRelation(uid)     [...]"},
{"contents":"PlayerData.friendData:checkInList(list, uid)","trigger":"PlayerData.friendData:checkInList(list, uid)     [...]"},
{"contents":"PlayerData.friendData:getRecommendCD()","trigger":"PlayerData.friendData:getRecommendCD()     [...]"},
{"contents":"PlayerData.friendData:isFriend(uid)","trigger":"PlayerData.friendData:isFriend(uid)     [...]"},
{"contents":"PlayerData.friendData:isFriendByName(name)","trigger":"PlayerData.friendData:isFriendByName(name)     [...]"},
{"contents":"PlayerData.friendData:isBlack(uid)","trigger":"PlayerData.friendData:isBlack(uid)     [...]"},
{"contents":"PlayerData.friendData:sortData(key, compareFunc)","trigger":"PlayerData.friendData:sortData(key, compareFunc)     [...]"},
{"contents":"PlayerData.friendData:getFriendInfoByUid(uid)","trigger":"PlayerData.friendData:getFriendInfoByUid(uid)     [...]"},
{"contents":"PlayerData.heroBagData:getSize()","trigger":"PlayerData.heroBagData:getSize()     [...]"},
{"contents":"PlayerData.heroBagData:isArmedByEquipId(equipId)","trigger":"PlayerData.heroBagData:isArmedByEquipId(equipId)     [...]"},
{"contents":"PlayerData.heroBagData:isArmedByTreasureId(treasureId)","trigger":"PlayerData.heroBagData:isArmedByTreasureId(treasureId)     [...]"},
{"contents":"PlayerData.heroBagData:getHeroDataByIndex(i)","trigger":"PlayerData.heroBagData:getHeroDataByIndex(i)     [...]"},
{"contents":"PlayerData.heroBagData:getHeroDataList()","trigger":"PlayerData.heroBagData:getHeroDataList()     [...]"},
{"contents":"PlayerData.heroBagData:sortHeroDataList()","trigger":"PlayerData.heroBagData:sortHeroDataList()     [...]"},
{"contents":"PlayerData.heroBagData:updateHeroBagData(heroListData)","trigger":"PlayerData.heroBagData:updateHeroBagData(heroListData)     [...]"},
{"contents":"PlayerData.heroBagData:updateHeroGrid(heroGrid)","trigger":"PlayerData.heroBagData:updateHeroGrid(heroGrid)     [...]"},
{"contents":"PlayerData.heroBagData:removeHeroGrid(heroId,heroList,heroMap)","trigger":"PlayerData.heroBagData:removeHeroGrid(heroId,heroList,heroMap)     [...]"},
{"contents":"PlayerData.heroBagData:getTidByHid(hid)","trigger":"PlayerData.heroBagData:getTidByHid(hid)     [...]"},
{"contents":"PlayerData.heroBagData:getHeroNums()","trigger":"PlayerData.heroBagData:getHeroNums()     [...]"},
{"contents":"PlayerData.heroBagData:getHeroDataByHid(hid)","trigger":"PlayerData.heroBagData:getHeroDataByHid(hid)     [...]"},
{"contents":"PlayerData.loginData:updateCharatorData(data)","trigger":"PlayerData.loginData:updateCharatorData(data)     [...]"},
{"contents":"PlayerData.loginData:addCharatorData(newCharactor)","trigger":"PlayerData.loginData:addCharatorData(newCharactor)     [...]"},
{"contents":"PlayerData.loginData:getCharatorId(index)","trigger":"PlayerData.loginData:getCharatorId(index)     [...]"},
{"contents":"PlayerData.loginData:getAllCharators()","trigger":"PlayerData.loginData:getAllCharators()     [...]"},
{"contents":"PlayerData.mailData:updateData(msg)","trigger":"PlayerData.mailData:updateData(msg)     [...]"},
{"contents":"PlayerData.mailData:getUnreadNum()","trigger":"PlayerData.mailData:getUnreadNum()     [...]"},
{"contents":"PlayerData.mailData:getList(typ)","trigger":"PlayerData.mailData:getList(typ)     [...]"},
{"contents":"PlayerData.mailData:getOriginList(typ)","trigger":"PlayerData.mailData:getOriginList(typ)     [...]"},
{"contents":"PlayerData.mailData:isExpired(mail)","trigger":"PlayerData.mailData:isExpired(mail)     [...]"},
{"contents":"PlayerData.motoData:PushMoto(motoPath,parent,data)","trigger":"PlayerData.motoData:PushMoto(motoPath,parent,data)     [...]"},
{"contents":"PlayerData.motoData:PushMotoBean(motoBean)","trigger":"PlayerData.motoData:PushMotoBean(motoBean)     [...]"},
{"contents":"PlayerData.motoData:PopMoto()","trigger":"PlayerData.motoData:PopMoto()     [...]"},
{"contents":"PlayerData.motoData:GetLastMoto()","trigger":"PlayerData.motoData:GetLastMoto()     [...]"},
{"contents":"PlayerData.motoData:SetLastMoto(motoBean)","trigger":"PlayerData.motoData:SetLastMoto(motoBean)     [...]"},
{"contents":"PlayerData.motoData:PopPreMoto()","trigger":"PlayerData.motoData:PopPreMoto()     [...]"},
{"contents":"PlayerData.motoData:PopTopMoto()","trigger":"PlayerData.motoData:PopTopMoto()     [...]"},
{"contents":"PlayerData.motoData:ClearStack()","trigger":"PlayerData.motoData:ClearStack()     [...]"},
{"contents":"PlayerData.motoData:GetMotoBeanRoot()","trigger":"PlayerData.motoData:GetMotoBeanRoot()     [...]"},
{"contents":"PlayerData.motoData:printStack()","trigger":"PlayerData.motoData:printStack()     [...]"},
{"contents":"PlayerData.prizeData:updateData(msg)","trigger":"PlayerData.prizeData:updateData(msg)     [...]"},
{"contents":"PlayerData.prizeData:uniqKey(id1, id2)","trigger":"PlayerData.prizeData:uniqKey(id1, id2)     [...]"},
{"contents":"PlayerData.prizeData:getPrizeList()","trigger":"PlayerData.prizeData:getPrizeList()     [...]"},
{"contents":"PlayerData.prizeData:isExpired(prize)","trigger":"PlayerData.prizeData:isExpired(prize)     [...]"},
{"contents":"PlayerData.prizeData:haveUnGetPrize()","trigger":"PlayerData.prizeData:haveUnGetPrize()     [...]"},
{"contents":"PlayerData.prizeData:havePrize()","trigger":"PlayerData.prizeData:havePrize()     [...]"},
{"contents":"PlayerData.rebelData:update(TRebelMainDataRet)","trigger":"PlayerData.rebelData:update(TRebelMainDataRet)     [...]"},
{"contents":"PlayerData.rebelData:setRebels(rebels)","trigger":"PlayerData.rebelData:setRebels(rebels)     [...]"},
{"contents":"PlayerData.rebelData:updateRebels(rebels)","trigger":"PlayerData.rebelData:updateRebels(rebels)     [...]"},
{"contents":"PlayerData.rebelData:afterSetRebel(rebelMap)","trigger":"PlayerData.rebelData:afterSetRebel(rebelMap)     [...]"},
{"contents":"PlayerData.rebelData:rebelChange()","trigger":"PlayerData.rebelData:rebelChange()     [...]"},
{"contents":"PlayerData.rebelData:onCreateNewRebel(TRebel)","trigger":"PlayerData.rebelData:onCreateNewRebel(TRebel)     [...]"},
{"contents":"PlayerData.rebelData:getRebels()","trigger":"PlayerData.rebelData:getRebels()     [...]"},
{"contents":"PlayerData.rebelData:getRebelById(id)","trigger":"PlayerData.rebelData:getRebelById(id)     [...]"},
{"contents":"PlayerData.rebelData:getMaxRebelPage()","trigger":"PlayerData.rebelData:getMaxRebelPage()     [...]"},
{"contents":"PlayerData.rebelData:getRebelInfoByIndex(rebelIndex)","trigger":"PlayerData.rebelData:getRebelInfoByIndex(rebelIndex)     [...]"},
{"contents":"PlayerData.rebelData:getRebelConf()","trigger":"PlayerData.rebelData:getRebelConf()     [...]"},
{"contents":"PlayerData.rebelData:getExploitRewardConf()","trigger":"PlayerData.rebelData:getExploitRewardConf()     [...]"},
{"contents":"PlayerData.rebelData:checkAttackCost(attackType)","trigger":"PlayerData.rebelData:checkAttackCost(attackType)     [...]"},
{"contents":"PlayerData.rebelData:updateRebelHp(rebelId, hp)","trigger":"PlayerData.rebelData:updateRebelHp(rebelId, hp)     [...]"},
{"contents":"PlayerData.rebelData:removeRebel(rebelId)","trigger":"PlayerData.rebelData:removeRebel(rebelId)     [...]"},
{"contents":"PlayerData.shopData:updateData(TRetShopInfo)","trigger":"PlayerData.shopData:updateData(TRetShopInfo)     [...]"},
{"contents":"PlayerData.shopData:getShopResetCountById(shopid)","trigger":"PlayerData.shopData:getShopResetCountById(shopid)     [...]"},
{"contents":"PlayerData.shopData:getShelfGoodsDataById(shopid)","trigger":"PlayerData.shopData:getShelfGoodsDataById(shopid)     [...]"},
{"contents":"PlayerData.shopData:getShopGoodsDataById(shopid)","trigger":"PlayerData.shopData:getShopGoodsDataById(shopid)     [...]"},
{"contents":"PlayerData.shopData:getShopShowCurrencyData(shopid)","trigger":"PlayerData.shopData:getShopShowCurrencyData(shopid)     [...]"},
{"contents":"PlayerData.shopData:getShopFreeTimeData(shopid)","trigger":"PlayerData.shopData:getShopFreeTimeData(shopid)     [...]"},
{"contents":"PlayerData.shopData:getShopFreeTimeRefreshTimeData(shopid)","trigger":"PlayerData.shopData:getShopFreeTimeRefreshTimeData(shopid)     [...]"},
{"contents":"PlayerData.shopData:getShopAutoRefreshTimeData(shopid)","trigger":"PlayerData.shopData:getShopAutoRefreshTimeData(shopid)     [...]"},
{"contents":"PlayerData.shopData:getShopResetItemData(shopid)","trigger":"PlayerData.shopData:getShopResetItemData(shopid)     [...]"},
{"contents":"PlayerData.shopData:getShopResetCurrencyData(shopid)","trigger":"PlayerData.shopData:getShopResetCurrencyData(shopid)     [...]"},
{"contents":"PlayerData.shopData:getShopResetCountData(shopid)","trigger":"PlayerData.shopData:getShopResetCountData(shopid)     [...]"},
{"contents":"PlayerData.shopData:getShopResetMode(shopid)","trigger":"PlayerData.shopData:getShopResetMode(shopid)     [...]"},
{"contents":"PlayerData.shopData:isExistTable(id, tab)","trigger":"PlayerData.shopData:isExistTable(id, tab)     [...]"},
{"contents":"PlayerData.shopData:getShopGoodsRecs(shopid)","trigger":"PlayerData.shopData:getShopGoodsRecs(shopid)     [...]"},
{"contents":"PlayerData.stageData:init()","trigger":"PlayerData.stageData:init()     [...]"},
{"contents":"PlayerData.stageData:UpdateUserCopyInfo( info)","trigger":"PlayerData.stageData:UpdateUserCopyInfo( info)     [...]"},
{"contents":"PlayerData.stageData:parseCopyInfo( _user_copy_info  )","trigger":"PlayerData.stageData:parseCopyInfo( _user_copy_info  )     [...]"},
{"contents":"PlayerData.stageData:makeBaseInfo(_base_data )","trigger":"PlayerData.stageData:makeBaseInfo(_base_data )     [...]"},
{"contents":"PlayerData.stageData:makeCopyInfo(_copy_data )","trigger":"PlayerData.stageData:makeCopyInfo(_copy_data )     [...]"},
{"contents":"PlayerData.stageData:mergeUserCopyInfo( _user_copy_info , addData  )","trigger":"PlayerData.stageData:mergeUserCopyInfo( _user_copy_info , addData  )     [...]"},
{"contents":"PlayerData.stageData:getFarestCopy( _copy_type  )","trigger":"PlayerData.stageData:getFarestCopy( _copy_type  )     [...]"},
{"contents":"PlayerData.stageData:getCopyIds( _copy_type  )","trigger":"PlayerData.stageData:getCopyIds( _copy_type  )     [...]"},
{"contents":"PlayerData.stageData:getBaseIds( _copy_id )","trigger":"PlayerData.stageData:getBaseIds( _copy_id )     [...]"},
{"contents":"PlayerData.stageData:getAllCopyInfo( _copy_type  )","trigger":"PlayerData.stageData:getAllCopyInfo( _copy_type  )     [...]"},
{"contents":"PlayerData.stageData:getTypeAndCopyInfo( copy_id  )","trigger":"PlayerData.stageData:getTypeAndCopyInfo( copy_id  )     [...]"},
{"contents":"PlayerData.stageData:getCopyInfo( copy_id  )","trigger":"PlayerData.stageData:getCopyInfo( copy_id  )     [...]"},
{"contents":"PlayerData.stageData:getCopyStar( copy_id )","trigger":"PlayerData.stageData:getCopyStar( copy_id )     [...]"},
{"contents":"PlayerData.stageData:getBaseInfo( copy_id , base_id )","trigger":"PlayerData.stageData:getBaseInfo( copy_id , base_id )     [...]"},
{"contents":"PlayerData.tacticData:isCarry(tid)","trigger":"PlayerData.tacticData:isCarry(tid)     [...]"},
{"contents":"PlayerData.tacticData:updateData(msg)","trigger":"PlayerData.tacticData:updateData(msg)     [...]"},
{"contents":"PlayerData.tacticData:getTacticByModeId(modeId)","trigger":"PlayerData.tacticData:getTacticByModeId(modeId)     [...]"},
{"contents":"PlayerData.tempData:getTempValue(key, def)","trigger":"PlayerData.tempData:getTempValue(key, def)     [...]"},
{"contents":"PlayerData.tempData:setTempValue(key, val)","trigger":"PlayerData.tempData:setTempValue(key, val)     [...]"},
{"contents":"PlayerData.treasureBagData:getTreasureDataList()","trigger":"PlayerData.treasureBagData:getTreasureDataList()     [...]"},
{"contents":"PlayerData.treasureBagData:sortTreasureDataList()","trigger":"PlayerData.treasureBagData:sortTreasureDataList()     [...]"},
{"contents":"PlayerData.treasureBagData:updateTreasureBagData(treasureListData)","trigger":"PlayerData.treasureBagData:updateTreasureBagData(treasureListData)     [...]"},
{"contents":"PlayerData.treasureBagData:updateTreasure(treasureInfo)","trigger":"PlayerData.treasureBagData:updateTreasure(treasureInfo)     [...]"},
{"contents":"PlayerData.treasureBagData:removeTreasure(treasureId,treasureList,treasureMap)","trigger":"PlayerData.treasureBagData:removeTreasure(treasureId,treasureList,treasureMap)     [...]"},
{"contents":"PlayerData.userData:updateData(data)","trigger":"PlayerData.userData:updateData(data)     [...]"},
{"contents":"PlayerData.userData:updateCurrency(data)","trigger":"PlayerData.userData:updateCurrency(data)     [...]"},
{"contents":"PlayerData.userData:updateRecover(data)","trigger":"PlayerData.userData:updateRecover(data)     [...]"},
{"contents":"PlayerData.userData:getUid()","trigger":"PlayerData.userData:getUid()     [...]"},
{"contents":"PlayerData.userData:getName()","trigger":"PlayerData.userData:getName()     [...]"},
{"contents":"PlayerData.userData:getClass()","trigger":"PlayerData.userData:getClass()     [...]"},
{"contents":"PlayerData.userData:getHead()","trigger":"PlayerData.userData:getHead()     [...]"},
{"contents":"PlayerData.userData:getLevel()","trigger":"PlayerData.userData:getLevel()     [...]"},
{"contents":"PlayerData.userData:getVipLevel()","trigger":"PlayerData.userData:getVipLevel()     [...]"},
{"contents":"PlayerData.userData:getCurrExp()","trigger":"PlayerData.userData:getCurrExp()     [...]"},
{"contents":"PlayerData.userData:getCurrency(curid)","trigger":"PlayerData.userData:getCurrency(curid)     [...]"},
{"contents":"PlayerData.userData:getCurrencyMaxInTable(curid)","trigger":"PlayerData.userData:getCurrencyMaxInTable(curid)     [...]"},
{"contents":"PlayerData.userData:getCurrencyMax(curid)","trigger":"PlayerData.userData:getCurrencyMax(curid)     [...]"},
{"contents":"PlayerData.userData:getCurrencyLimit(curid)","trigger":"PlayerData.userData:getCurrencyLimit(curid)     [...]"},
{"contents":"PlayerData.userData:getLeftCurrencyToMax(curid)","trigger":"PlayerData.userData:getLeftCurrencyToMax(curid)     [...]"},
{"contents":"PlayerData.userData:getLeftCurrencyToLimit(curid)","trigger":"PlayerData.userData:getLeftCurrencyToLimit(curid)     [...]"},
{"contents":"PlayerData.userData:getRecover(recid)","trigger":"PlayerData.userData:getRecover(recid)     [...]"},
  ],}